name: Build and Deploy Recipes

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      # Set this repository variable in GitHub → Settings → Secrets and variables → Actions → Variables
      # Example: PUBLISH_BRANCH=deploy to publish to 'deploy' branch of HunBug.github.io
      PUBLISH_BRANCH: ${{ vars.PUBLISH_BRANCH }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Pandoc
        run: |
          wget https://github.com/jgm/pandoc/releases/download/3.1.8/pandoc-3.1.8-1-amd64.deb
          sudo dpkg -i pandoc-3.1.8-1-amd64.deb

      - name: Make scripts executable
        run: |
          chmod +x scripts/optimize_images.py
          chmod +x scripts/generate_ebook.py

      - name: Optimize images
        run: |
          python scripts/optimize_images.py --input-dir images --output-dir optimized-images

      - name: Generate e-book content
        run: |
          python scripts/generate_ebook.py --input-dir recipes --output-dir dist --optimized-images optimized-images

      - name: Copy optimized images to dist
        run: |
          cp -r optimized-images dist/ || true

      - name: Create simple CSS
        run: |
          cat > dist/style.css << 'EOF'
          body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            color: #333;
          }
          img {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
          }
          h1, h2, h3 {
            color: #2c3e50;
          }
          code {
            background-color: #f8f9fa;
            padding: 2px 4px;
            border-radius: 3px;
          }
          pre {
            background-color: #f8f9fa;
            padding: 16px;
            border-radius: 6px;
            overflow-x: auto;
          }
          EOF

      - name: Generate EPUB
        run: |
          pandoc dist/kumpli-recipes.md -o dist/kumpli-recipes.epub --metadata title="Kumpli Recipes"

      - name: Generate standalone book HTML
        run: |
          pandoc dist/kumpli-recipes.md -o dist/book.html --standalone --metadata title="Kumpli Recipes" --css style.css

      - name: Generate ToC index.html already created by generator
        run: |
          test -f dist/index.html

      - name: Deploy to external repository (recipes/ in target branch)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
          EXTERNAL_REPOSITORY: HunBug/HunBug.github.io
        run: |
          set -e
          BRANCH="${PUBLISH_BRANCH:-main}"
          echo "Publishing to branch: ${BRANCH}"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # Clone full history to ensure branch refs are available
          git clone https://${DEPLOY_TOKEN}@github.com/${EXTERNAL_REPOSITORY}.git pages
          cd pages
          # Fetch the target branch explicitly
          git fetch origin "${BRANCH}" --prune || true
          if git show-ref --verify --quiet "refs/remotes/origin/${BRANCH}"; then
            git checkout -B "${BRANCH}" "origin/${BRANCH}"
          else
            echo "Target branch '${BRANCH}' not found remotely. Creating an orphan branch."
            git checkout --orphan "${BRANCH}"
            git reset --hard
          fi
          # Replace recipes/ with new build
          git rm -r --quiet recipes || true
          mkdir -p recipes
          cp -r ../dist/* recipes/

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to deploy."
            exit 0
          fi
          git commit -m "Deploy recipes - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push origin "${BRANCH}"
